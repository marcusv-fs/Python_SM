digraph "State Machine" {
	graph [color=black,
		directed=true,
		fillcolor=white,
		label="State Machine",
		rankdir=LR,
		"strict"=false,
		style=solid
	];
	node [color=black,
		fillcolor=white,
		label="\N",
		peripheries=1,
		shape=rectangle,
		style="rounded,filled"
	];
	edge [color=black];
	Initial	[color=red,
		fillcolor=darksalmon,
		label="Initial\l",
		peripheries=2];
	Explore	[label="Explore\l- enter:\l  + on_enter_Explore\l"];
	Initial -> Explore	[label=Initial_to_Explore];
	SearchForBases	[label="SearchForBases\l- enter:\l  + on_enter_SearchForBases\l"];
	Explore -> SearchForBases	[label="Explore_to_SearchForBases [cond_Explore_SearchForBases]"];
	Final	[label="Final\l- enter:\l  + on_enter_Final\l"];
	Explore -> Final	[label="Explore_to_Final [cond_Explore_Final]"];
	SearchForBases -> Explore	[label="SearchForBases_to_Explore [cond_SearchForBases_Explore]"];
	GoToBase	[label="GoToBase\l- enter:\l  + on_enter_GoToBase\l"];
	SearchForBases -> GoToBase	[label="SearchForBases_to_GoToBase [cond_SearchForBases_GoToBase]"];
	ApproachToBase	[label="ApproachToBase\l- enter:\l  + on_enter_ApproachToBase\l"];
	GoToBase -> ApproachToBase	[label=GoToBase_to_ApproachToBase];
	ApproachToBase -> ApproachToBase	[label="ApproachToBase_to_ApproachToBase [cond_ApproachToBase_ApproachToBase]"];
	LandAndScore	[label="LandAndScore\l- enter:\l  + on_enter_LandAndScore\l"];
	ApproachToBase -> LandAndScore	[label="ApproachToBase_to_LandAndScore [cond_ApproachToBase_LandAndScore]"];
	TakeOff	[label="TakeOff\l- enter:\l  + on_enter_TakeOff\l"];
	LandAndScore -> TakeOff	[label=LandAndScore_to_TakeOff];
	TakeOff -> Explore	[label="TakeOff_to_Explore [cond_TakeOff_Explore]"];
	TakeOff -> Final	[label="TakeOff_to_Final [cond_TakeOff_Final]"];
}
